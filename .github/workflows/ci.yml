name: CI Pipeline - Pr√°ctica

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  validate:
    name: Validaciones B√°sicas
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # Paso 1: Descargar el c√≥digo
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Optimiza la descarga

      # Paso 2: Verificar estructura del proyecto
      - name: Verify Files
        run: |
          echo "üìÇ Estructura del proyecto:"
          ls -la
          
          echo "\nüîç Contenido de archivos importantes:"
          [ -f README.md ] && head -5 README.md || echo "‚ö†Ô∏è No existe README.md"
          [ -f index.html ] && head -5 index.html || echo "‚ö†Ô∏è No existe index.html"

      # Paso 3: Pruebas simuladas
      - name: Run Tests
        run: |
          echo "üß™ Iniciando pruebas..."
          echo "1. Verificando sintaxis b√°sica"
          [ -f index.html ] && grep -q '<html' index.html && echo "‚úÖ HTML v√°lido" || echo "‚ö†Ô∏è No se detect√≥ HTML v√°lido"
          
          echo "\n2. Conteo de archivos"
          echo "Total: $(find . -type f | wc -l) archivos"
          
          echo "\nüéâ Pruebas completadas"

      # Paso 4: Generar y subir artefacto (versi√≥n actualizada)
      - name: Create Artifact
        run: |
          timestamp=$(date +%Y%m%d-%H%M%S)
          echo "Versi√≥n: $timestamp" > build-info.txt
          echo "Commit: ${{ github.sha }}" >> build-info.txt
          echo "Workflow: ${{ github.workflow }}" >> build-info.txt
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-metadata-${{ github.run_id }}
          path: build-info.txt
          retention-days: 5